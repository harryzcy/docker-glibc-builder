name: Release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+"
      - "v[0-9]+.[0-9]+-[0-9]+"

permissions:
  contents: read

jobs:
  release:
    name: Release on GitHub
    if: github.repository_owner == 'harryzcy'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - uses: release-drafter/release-drafter@3f0f87098bd6b5c5b9a36d49c41d998ea58f9348 # v6
        id: release_drafter
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish Release
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7
        with:
          script: |
            await github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: ${{ steps.release_drafter.outputs.id }},
              tag_name: '${{ github.ref_name }}',
              name: 'Release ${{ github.ref_name }}',
              draft: context.eventName != 'push'
            });

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5
        with:
          images: |
            ghcr.io/harryzcy/glibc-builder

      - name: Set up tags
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7
        env:
          IMAGE_NAME: ghcr.io/harryzcy/glibc-builder
        with:
          script: |
            const image_name = process.env.IMAGE_NAME
            const tag_name = process.env.GITHUB_REF_NAME
            let [version, sequence] = tag_name.split('-')
            if (!sequence) sequence = '0'
            const [major, minor] = version.slice(1).split('.')
            const tags = [
              `${image_name}:latest`,
              `${image_name}:${major}`,
              `${image_name}:${major}.${minor}`,
              `${image_name}:${major}.${minor}-${sequence}`
            ]
            core.exportVariable('IMAGE_TAGS', tags.join(','))

      - name: Set up QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build docker image
        uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75 # v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64/v8
          push: true
          tags: ${{ env.IMAGE_TAGS }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build assets
        run: |
          docker run --platform linux/arm64 --env STDOUT=1 ghcr.io/harryzcy/glibc-builder:latest $GLIBC_VERSION /usr/glibc-compat > glibc-bin-$GLIBC_VERSION-0-aarch64.tar.gz
          docker run --platform linux/amd64 --env STDOUT=1 ghcr.io/harryzcy/glibc-builder:latest $GLIBC_VERSION /usr/glibc-compat > glibc-bin-$GLIBC_VERSION-0-x86_64.tar.gz
        env:
          GLIBC_VERSION: 2.38

      - name: Upload assets to Release
        uses: shogo82148/actions-upload-release-asset@c91b7fd867cf280772374042252f0dc8e1ade751 # v1
        with:
          upload_url: ${{ steps.release_drafter.outputs.upload_url }}
          asset_path: glibc-bin-*.tar.gz
